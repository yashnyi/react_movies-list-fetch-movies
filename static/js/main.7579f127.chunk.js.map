{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","BASE_URL","FindMovie","addMovie","useState","query","setSearchQuery","setMovie","isErrorVisible","setErrorStatus","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","movieTitle","fetch","then","response","json","Response","Title","Plot","Poster","imdbID","App","data","setMovies","movieToAdd","some","ReactDOM","render","document","getElementById"],"mappings":"8wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SCVlCG,G,MAAQ,0CADE,YCOT,IAAMC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACTC,mBAAS,IADA,mBAClCC,EADkC,KAC3BC,EAD2B,OAEfF,mBAAS,MAFM,mBAElCN,EAFkC,KAE3BS,EAF2B,OAGAH,oBAAS,GAHT,mBAGlCI,EAHkC,KAGlBC,EAHkB,KAkDzC,OACE,oCACE,0BAAMlB,UAAU,aAAamB,SAlBb,SAACC,GACnBA,EAAMC,iBAEDd,GAMLK,EAASL,GAETQ,EAAe,IACfC,EAAS,MACTE,GAAe,IATbA,GAAe,KAeb,yBAAKlB,UAAU,SACb,2BAAOA,UAAU,QAAQsB,QAAQ,eAAjC,eAIA,yBAAKtB,UAAU,WACb,2BACEuB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZC,MAAOZ,EACPa,SA3Dc,SAACP,GAAW,IAC5BM,EAAUN,EAAMQ,OAAhBF,MAERX,EAAeW,GACfR,GAAe,IAwDLlB,UAAWiB,EACP,kBACA,sBAIPA,EACC,uBAAGjB,UAAU,kBAAb,wCAGG,sCAGP,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEuB,KAAK,SACLvB,UAAU,kBACV6B,QAvEM,WDhBb,IAAkBC,KCiBZhB,EDhBJiB,MAAM,GAAD,OAAIrB,EAAJ,cAAkBoB,IAC3BE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCgBxBF,MAAK,SAACC,GACL,GAA0B,UAAtBA,EAASE,SAIX,OAHAjB,GAAe,QACfH,EAAe,IAKjBC,EAAS,CACPpB,MAAOqC,EAASG,MAChBvC,YAAaoC,EAASI,KACtBvC,OAAQmC,EAASK,OACjBvC,QAAQ,8BAAD,OAAgCkC,EAASM,QAChD9B,OAAQwB,EAASM,SAGnBrB,GAAe,QAkDX,iBASF,yBAAKlB,UAAU,WACb,4BACEuB,KAAK,SACLvB,UAAU,qBAFZ,sBAUJiB,EAUA,qCATA,yBAAKjB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCO,EACC,kBAAC,EAAcA,GAEf,wC,OC3GCiC,EAAM,WAAO,IAAD,EACK3B,mBAAS4B,GADd,mBAChBpC,EADgB,KACRqC,EADQ,KASvB,OACE,yBAAK1C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CACEY,SAbS,SAAC+B,GACXtC,EAAOuC,MAAK,SAAArC,GAAK,OAAIA,EAAME,SAAWkC,EAAWlC,WACpDiC,EAAU,GAAD,mBAAKrC,GAAL,CAAasC,WCN5BE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7579f127.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const API_KEY = 'fce5a15';\nconst BASE_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(movieTitle) {\n  return fetch(`${BASE_URL}&t=${movieTitle}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [query, setSearchQuery] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [isErrorVisible, setErrorStatus] = useState(false);\n\n  const handleSearchQuery = (event) => {\n    const { value } = event.target;\n\n    setSearchQuery(value);\n    setErrorStatus(false);\n  };\n\n  const findMovie = () => {\n    getMovie(query)\n      .then((response) => {\n        if (response.Response === 'False') {\n          setErrorStatus(true);\n          setSearchQuery('');\n\n          return;\n        }\n\n        setMovie({\n          title: response.Title,\n          description: response.Plot,\n          imgUrl: response.Poster,\n          imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n          imdbId: response.imdbID,\n        });\n\n        setErrorStatus(false);\n      });\n  };\n\n  const addNewMovie = (event) => {\n    event.preventDefault();\n\n    if (!movie) {\n      setErrorStatus(true);\n\n      return;\n    }\n\n    addMovie(movie);\n\n    setSearchQuery('');\n    setMovie(null);\n    setErrorStatus(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={addNewMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={query}\n              onChange={handleSearchQuery}\n              className={isErrorVisible\n                ? 'input is-danger'\n                : 'input is-success'}\n            />\n          </div>\n\n          {isErrorVisible ? (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          ) : (<></>)}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {!isErrorVisible ? (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          {movie ? (\n            <MovieCard {...movie} />\n          ) : (\n            <></>\n          )}\n        </div>\n      ) : (\n        <></>\n      )\n      }\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movieToAdd) => {\n    if (!movies.some(movie => movie.imdbId === movieToAdd.imdbId)) {\n      setMovies([...movies, movieToAdd]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}